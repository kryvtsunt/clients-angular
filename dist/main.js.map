{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/client-info/client-info.component.css","webpack:///./src/app/client-info/client-info.component.html","webpack:///./src/app/client-info/client-info.component.ts","webpack:///./src/app/client-list/client-list.component.css","webpack:///./src/app/client-list/client-list.component.html","webpack:///./src/app/client-list/client-list.component.ts","webpack:///./src/app/client-viewer/client-viewer.component.css","webpack:///./src/app/client-viewer/client-viewer.component.html","webpack:///./src/app/client-viewer/client-viewer.component.ts","webpack:///./src/app/services/client.service.client.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div class=\\\"bg-light\\\">\\r\\n<router-outlet></router-outlet>\\r\\n</div>\\r\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppComponent} from './app.component';\nimport {ClientListComponent} from './client-list/client-list.component';\nimport {ClientInfoComponent} from './client-info/client-info.component';\nimport {ClientViewerComponent} from './client-viewer/client-viewer.component';\nimport {FormsModule} from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\nimport {routing} from './app.routing';\nimport {ClientService} from './services/client.service.client';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ClientListComponent,\n    ClientInfoComponent,\n    ClientViewerComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    routing\n  ],\n  providers: [ClientService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import { Routes, RouterModule } from '@angular/router';\nimport {ClientViewerComponent} from './client-viewer/client-viewer.component';\n\n\nconst appRoutes: Routes = [\n  { path: '', redirectTo: 'client', pathMatch: 'full'},\n  { path: 'client', component: ClientViewerComponent},\n  { path: 'client/:clientId', component: ClientViewerComponent},\n  { path: '**', component: ClientViewerComponent}\n];\nexport const routing = RouterModule.forRoot(appRoutes);\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"clientId !== undefined && client !== undefined\\\">\\n  <div class=\\\" text-white text-center text-white shadow-lg p-3 rounded\\\" style=\\\"background-color: #212529\\\">\\n    <h3 style=\\\"padding-left: 3%;\\\"><i class=\\\"fa fa-user\\\"> </i> Personal Information</h3>\\n  </div>\\n  <div class=\\\"bg-white shadow-lg p-3 mb-5 rounded\\\">\\n    <div class=\\\"row\\\" style=\\\"padding: 0px 20px\\\">\\n      <div class=\\\"col-lg-5 text-center rounded\\\" style=\\\"padding: 30px 5px 50px 5px; background-color: #191e23\\\">\\n        <img src=\\\"{{client.general.avatar}}\\\" width=\\\"100%\\\" class=\\\"rounded-circle\\\"\\n             style=\\\"border: 5px solid #2b3137\\\">\\n        <br/>\\n      </div>\\n      <div class=\\\"col-lg-7\\\">\\n        <br/>\\n        <h4><strong>{{client.general.firstName}} {{client.general.lastName}}</strong></h4>\\n        <h6 class=\\\"text-black-50\\\"><em>{{client.job.title}} <br/> at {{client.job.company}}</em></h6>\\n        <ul class=\\\"list-group list-group-flush\\\">\\n          <div class=\\\"list-group-item\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-6\\\"> <h6 class=\\\"text-muted\\\">Email: </h6> </div>\\n              <div class=\\\"col-6\\\"> <h6><strong>{{client.contact.email.split('@')[0]}}</strong></h6><h6><strong>@{{client.contact.email.split('@')[1]}}</strong></h6> </div>\\n            </div>\\n          </div>\\n          <div class=\\\"list-group-item\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-6\\\"> <h6 class=\\\"text-muted\\\">Phone: </h6> </div>\\n              <div class=\\\"col-6\\\"> <h6><strong>{{client.contact.phone}}</strong></h6> </div>\\n            </div>\\n          </div>\\n          <div class=\\\"list-group-item\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-6\\\"> <h6 class=\\\"text-muted\\\">Address: </h6> </div>\\n              <div class=\\\"col-6\\\"> <h6><strong>{{client.address.street}}, {{client.address.city}}, {{client.address.country}}, {{client.address.zipCode}}</strong></h6> </div>\\n            </div>\\n          </div>\\n        </ul>\\n      </div>\\n    </div>\\n    <br/>\\n  </div>\\n</div>\\n<div *ngIf=\\\"clientId === undefined\\\">\\n  <h3 class=\\\"text-muted text-uppercase\\\"> choose client to see the info-panel </h3>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {ClientService} from '../services/client.service.client';\n\n@Component({\n  selector: 'app-client-info',\n  templateUrl: './client-info.component.html',\n  styleUrls: ['./client-info.component.css']\n})\nexport class ClientInfoComponent implements OnInit {\n\n  client;\n  clientId: string;\n\n  constructor(private service: ClientService, private route: ActivatedRoute) {\n    this.route.params.subscribe(\n      params => { this.setParams(params); });\n  }\n\n  setParams(params) {\n    this.clientId = params['clientId'];\n    if (this.clientId !== undefined) {\n      this.getClientById(this.clientId);\n    }\n  }\n  getClientById(id: string) {\n    this.service.getClientById(id)\n      .then(res => {this.client = res[0]; });\n  }\n\n  ngOnInit() {\n\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div>\\n  <div class=\\\"input-group input-group-lg\\\">\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"title\\\" (keyup)=\\\"search()\\\" class=\\\"form-control border border-right-0\\\"\\n           placeholder=\\\"Search\\\">\\n    <span class=\\\"input-group-append\\\">\\n                <button class=\\\"btn btn-outline-dark bg-white border border-left-0\\\"\\n                        type=\\\"button\\\" title=\\\"Search\\\" disabled>\\n                    <i class=\\\"fa fa-search\\\"></i>\\n                </button>\\n    </span>\\n  </div>\\n  <ul *ngFor=\\\"let client of clients\\\" class=\\\"list-group\\\">\\n    <li [ngClass]=\\\"{'btn-dark active': client.general.id == clientId}\\\" class=\\\" btn list-group-item list-group-item-action\\\" routerLink=\\\"/client/{{client.general.id}}\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-3 col-md-12\\\">\\n          <img class=\\\"rounded\\\" src=\\\"{{client.general.avatar}}\\\" width=\\\"100px\\\">\\n        </div>\\n        <div class=\\\"col-lg-9 col-md-12\\\">\\n          <h3>{{client.general.firstName}} {{client.general.lastName}}</h3>\\n          <h6 class=\\\"text-muted\\\"> {{client.job.title}}</h6>\\n        </div>\\n      </div>\\n    </li>\\n  </ul>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ClientService} from '../services/client.service.client';\nimport {ActivatedRoute} from '@angular/router';\n\n@Component({\n  selector: 'app-client-list',\n  templateUrl: './client-list.component.html',\n  styleUrls: ['./client-list.component.css']\n})\nexport class ClientListComponent implements OnInit {\n  clients;\n  allClients;\n  clientId: string;\n  title: string;\n\n  constructor(private service: ClientService, private route: ActivatedRoute) {\n  this.route.params.subscribe(\n    params => {this.clientId = params['clientId']; });\n}\n  getAllClients() {\n    this.service.getAllClients()\n      .then(result => {\n        this.allClients = result;\n        this.clients = result;\n      });\n  }\n\n  search() {\n    console.log(this.title);\n    if (this.title !== '') {\n      this.service.searchClients(this.title)\n        .then(res => {this.clients = res});\n    } else {\n      this.clients = this.allClients;\n    }\n  }\n\n  ngOnInit() {\n    this.title = '';\n    this.getAllClients();\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<br/>\\n<div class=\\\"container\\\">\\n  <h2><strong> List of All Clients </strong></h2>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <app-client-list></app-client-list>\\n      <br/>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <app-client-info></app-client-info>\\n    </div>\\n  </div>\\n\\n</div>\\n<br/>\\n<br/>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-client-viewer',\n  templateUrl: './client-viewer.component.html',\n  styleUrls: ['./client-viewer.component.css']\n})\nexport class ClientViewerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","const HOST = 'https://tk-clients-angular.herokuapp.com/';\n// const HOST = 'http://localhost:4200/';\n\nconst CLIENT_URL = HOST + 'assets/clients.json';\n\nexport class ClientService {\n\n  getAllClients() {\n    return fetch(CLIENT_URL)\n      .then(response => response.json());\n  }\n\n  getClientById(id: string) {\n    return fetch(CLIENT_URL)\n      .then(response => response.json())\n      .then( response2 => response2.filter(client => client.general.id === id ) );\n  }\n\n  searchClients(title: string) {\n    return fetch(CLIENT_URL)\n      .then(response => response.json())\n      .then( response2 => response2.filter(client =>\n        client.general.firstName.toLowerCase().includes(title.toLowerCase()) ||\n        client.general.lastName.toLowerCase().includes(title.toLowerCase().toLowerCase()) ||\n        client.job.company.toLowerCase().includes(title.toLowerCase()) ||\n        client.job.title.toLowerCase().includes(title.toLowerCase()) ||\n        client.contact.email.toLowerCase().includes(title.toLowerCase()) ||\n        client.contact.phone.toLowerCase().includes(title.toLowerCase()) ||\n        client.address.street.toLowerCase().includes(title.toLowerCase()) ||\n        client.address.city.toLowerCase().includes(title.toLowerCase()) ||\n        client.address.zipCode.toLowerCase().includes(title.toLowerCase()) ||\n        client.address.country.toLowerCase().includes(title.toLowerCase())\n      ));\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}